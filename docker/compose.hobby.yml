services:
    clickhouse:
        pull_policy: always
    kafka:
        pull_policy: always
    postgres:
        pull_policy: always
    redis:
        pull_policy: always
    zookeeper:
        pull_policy: always
    collector:
        build:
            context: .
            args:
                OTEL_COLLECTOR_ALPINE_IMAGE_NAME: alpine:3.20.2
                OTEL_COLLECTOR_IMAGE_NAME: otel/opentelemetry-collector-contrib:0.117.0
        pull_policy: always
    predictions:
        build:
            context: .
        pull_policy: always
    backend:
        container_name: backend
        image: ${BACKEND_IMAGE_NAME-ghcr.io/highlight/highlight-backend:latest}
        restart: on-failure
        ports:
            - '0.0.0.0:8082:8082'
        volumes:
            - highlight-data:/highlight-data
            - ../backend/env.enc:/build/env.enc
            - ../backend/env.enc.dgst:/build/env.enc.dgst
            - ../backend/localhostssl/server.key:/build/localhostssl/server.key
            - ../backend/localhostssl/server.crt:/build/localhostssl/server.crt
        env_file: .env

    frontend:
        container_name: frontend
        image: ${FRONTEND_IMAGE_NAME-ghcr.io/highlight/highlight-frontend:latest}
        restart: on-failure
        volumes:
            - ../backend/localhostssl/server.key:/etc/ssl/private/ssl-cert.key
            - ../backend/localhostssl/server.pem:/etc/ssl/certs/ssl-cert.pem
        ports:
            - '0.0.0.0:3000:3000'
            - '0.0.0.0:6006:6006'
            - '0.0.0.0:8080:8080'
        env_file: .env

volumes:
    highlight-data:

x-common: &common
  restart: unless-stopped
